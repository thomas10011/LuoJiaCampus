<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>